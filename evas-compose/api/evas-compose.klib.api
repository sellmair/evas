// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, macosArm64, macosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <io.sellmair:evas-compose>
final val io.sellmair.evas.compose/LocalEvents // io.sellmair.evas.compose/LocalEvents|{}LocalEvents[0]
    final fun <get-LocalEvents>(): androidx.compose.runtime/ProvidableCompositionLocal<io.sellmair.evas/Events?> // io.sellmair.evas.compose/LocalEvents.<get-LocalEvents>|<get-LocalEvents>(){}[0]
final val io.sellmair.evas.compose/LocalStates // io.sellmair.evas.compose/LocalStates|{}LocalStates[0]
    final fun <get-LocalStates>(): androidx.compose.runtime/ProvidableCompositionLocal<io.sellmair.evas/States?> // io.sellmair.evas.compose/LocalStates.<get-LocalStates>|<get-LocalStates>(){}[0]

final fun <#A: io.sellmair.evas/State?> (io.sellmair.evas/State.Key<#A>).io.sellmair.evas.compose/collectAsState(androidx.compose.runtime/Composer?, kotlin/Int): androidx.compose.runtime/State<#A> // io.sellmair.evas.compose/collectAsState|collectAsState@io.sellmair.evas.State.Key<0:0>(androidx.compose.runtime.Composer?;kotlin.Int){0ยง<io.sellmair.evas.State?>}[0]
final fun <#A: io.sellmair.evas/State?> (io.sellmair.evas/State.Key<#A>).io.sellmair.evas.compose/get(androidx.compose.runtime/Composer?, kotlin/Int): kotlinx.coroutines.flow/StateFlow<#A> // io.sellmair.evas.compose/get|get@io.sellmair.evas.State.Key<0:0>(androidx.compose.runtime.Composer?;kotlin.Int){0ยง<io.sellmair.evas.State?>}[0]
final fun <#A: io.sellmair.evas/State?> (io.sellmair.evas/State.Key<#A>).io.sellmair.evas.compose/set(#A, androidx.compose.runtime/Composer?, kotlin/Int) // io.sellmair.evas.compose/set|set@io.sellmair.evas.State.Key<0:0>(0:0;androidx.compose.runtime.Composer?;kotlin.Int){0ยง<io.sellmair.evas.State?>}[0]
final fun io.sellmair.evas.compose/events(androidx.compose.runtime/Composer?, kotlin/Int): io.sellmair.evas/Events // io.sellmair.evas.compose/events|events(androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun io.sellmair.evas.compose/installEvents(io.sellmair.evas/Events, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int) // io.sellmair.evas.compose/installEvents|installEvents(io.sellmair.evas.Events;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun io.sellmair.evas.compose/installStates(io.sellmair.evas/States, kotlin/Function2<androidx.compose.runtime/Composer, kotlin/Int, kotlin/Unit>, androidx.compose.runtime/Composer?, kotlin/Int) // io.sellmair.evas.compose/installStates|installStates(io.sellmair.evas.States;kotlin.Function2<androidx.compose.runtime.Composer,kotlin.Int,kotlin.Unit>;androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final fun io.sellmair.evas.compose/states(androidx.compose.runtime/Composer?, kotlin/Int): io.sellmair.evas/States // io.sellmair.evas.compose/states|states(androidx.compose.runtime.Composer?;kotlin.Int){}[0]
final inline fun io.sellmair.evas.compose/rememberEvasCoroutineScope(crossinline kotlin/Function0<kotlin.coroutines/CoroutineContext>?, androidx.compose.runtime/Composer?, kotlin/Int, kotlin/Int): kotlinx.coroutines/CoroutineScope // io.sellmair.evas.compose/rememberEvasCoroutineScope|rememberEvasCoroutineScope(kotlin.Function0<kotlin.coroutines.CoroutineContext>?;androidx.compose.runtime.Composer?;kotlin.Int;kotlin.Int){}[0]
